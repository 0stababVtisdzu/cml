name: Test & Deploy
on:
  schedule:
    - cron: 0 0 * * *
  release:
    types: [published]
  pull_request:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: npm run lint
  test:
    environment: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository) && 'test-external' || 'test-internal' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - uses: actions/setup-python@v2
      - run: pip install tensorboard
      - run: npm ci
      - run: npm run test
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TEST_GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          TEST_GITHUB_REPO: https://github.com/iterative/cml_qa_tests_dummy
          TEST_GITHUB_SHA: 62edc8b3f46a60b3fe1e5c08fd3e0046d350ee29
          TEST_GITLAB_TOKEN: ${{ secrets.TEST_GITLAB_TOKEN }}
          TEST_GITLAB_REPO: https://gitlab.com/iterative.ai/cml_qa_tests_dummy
          TEST_GITLAB_SHA: c4c13286e78dc252dd2611f31a755f10d343fbd4
          TEST_BBCLOUD_TOKEN: ${{ secrets.TEST_BBCLOUD_TOKEN }}
          TEST_BBCLOUD_REPO: https://bitbucket.org/iterative-ai/cml-qa-tests-dummy
          TEST_BBCLOUD_SHA: 9bb9131ce0af294fe1c6eedca1f2bce3983e80bd
  packages:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          registry-url: https://registry.npmjs.org
      - run: npm install
      - run:
          npm ${{ github.event_name == 'release' && 'publish' || 'publish
          --dry-run' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  images:
    runs-on: ubuntu-latest
    needs: packages
    strategy:
      matrix:
        cml: [0]
        dvc: [1, 2]
        base: [0, 1]
        gpu: [false, true]
        include:
          - base: 0
            ubuntu: 18.04
            python: 2.7
            cuda: 10.1
            cudnn: 7
          - base: 1
            ubuntu: 20.04
            python: 3.8
            cuda: 11.0.3
            cudnn: 8
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: docker/build-push-action@v2
        if: matrix.gpu == false
        with:
          push:
            ${{ github.event_name == 'release' || github.event_name ==
            'schedule' }}
          context: ./
          file: ./Dockerfile
          tags: |
            docker.io/dvcorg/cml:${{ matrix.cml }}-dvc${{ matrix.dvc }}-base${{
            matrix.base }}
            ghcr.io/iterative/cml:${{ matrix.cml }}-dvc${{ matrix.dvc }}-base${{
            matrix.base }}
          build-args: |
            CML_VERSION=${{ matrix.cml }}
            DVC_VERSION=${{ matrix.dvc }}
            PYTHON_VERSION=${{ matrix.python }}
            BASE_IMAGE=ubuntu:${{ matrix.ubuntu }}
      - uses: docker/build-push-action@v2
        if: matrix.gpu == true
        with:
          push:
            ${{ github.event_name == 'release' || github.event_name ==
            'schedule' }}
          context: ./
          file: ./Dockerfile
          tags: |
            docker.io/dvcorg/cml:${{ matrix.cml }}-dvc${{ matrix.dvc }}-base${{
            matrix.base }}-gpu
            ghcr.io/iterative/cml:${{ matrix.cml }}-dvc${{ matrix.dvc }}-base${{
            matrix.base }}-gpu
          build-args: |
            CML_VERSION=${{ matrix.cml }}
            DVC_VERSION=${{ matrix.dvc }}
            PYTHON_VERSION=${{ matrix.python }}
            BASE_IMAGE=nvidia/cuda:${{ matrix.cuda }}-cudnn${{ matrix.cudnn }}-runtime-ubuntu${{ matrix.ubuntu }}
